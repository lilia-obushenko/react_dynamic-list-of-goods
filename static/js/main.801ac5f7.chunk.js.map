{"version":3,"sources":["Button.tsx","GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["FilterButton","props","dataCy","children","onClick","Button","variant","type","GoodsList","React","memo","goods","Paper","elevation","sx","backgroundColor","List","width","position","overflow","maxHeight","padding","subheader","map","good","id","name","color","ListItem","style","ListItemText","primary","getAll","fetch","then","response","ok","json","Promise","reject","Error","App","useState","setGoods","Box","display","justifyContent","textAlign","className","result","sort","current","next","localeCompare","slice","filter","ReactDOM","render","document","getElementById"],"mappings":"yPASaA,EAA0B,SAACC,GACtC,IAAQC,EAA8BD,EAA9BC,OAAQC,EAAsBF,EAAtBE,SAAUC,EAAYH,EAAZG,QAE1B,OACE,cAACC,EAAA,EAAD,CACEC,QAAQ,WACRC,KAAK,SACL,UAASL,EACTE,QAASA,EAJX,SAMGD,K,gCCNMK,EAA6BC,IAAMC,MAC9C,gBAAGC,EAAH,EAAGA,MAAH,OACE,cAACC,EAAA,EAAD,CACEC,UAAW,EACXC,GAAI,CAAEC,gBAAiB,WAFzB,SAIE,cAACC,EAAA,EAAD,CACEF,GAAI,CACFG,MAAO,OACPC,SAAU,WACVC,SAAU,OACVC,UAAW,IACX,OAAQ,CAAEC,QAAS,IAErBC,UAAW,uBARb,SAUE,6BACGX,EAAMY,KAAI,SAAAC,GACT,IAAQC,EAAoBD,EAApBC,GAAIC,EAAgBF,EAAhBE,KAAMC,EAAUH,EAAVG,MAElB,OACE,cAACC,EAAA,EAAD,CAEEC,MAAO,CAAEF,SACT,UAAQ,OAHV,SAKE,cAACG,EAAA,EAAD,CAAcC,QAASL,KAJlBD,eC9Bd,SAASO,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GACJ,OAAKA,EAASC,GAIPD,EAASE,OAHPC,QAAQC,OAAO,IAAIC,MAAM,4BAOjC,ICRMC,EAAU,WACrB,MAA0BC,mBAAiB,IAA3C,mBAAO/B,EAAP,KAAcgC,EAAd,KAiBA,OACE,cAACC,EAAA,EAAD,CACE9B,GAAI,CACF+B,QAAS,OACTC,eAAgB,SAChBC,UAAW,UAJf,SAOE,sBAAKC,UAAU,MAAf,UACE,oBAAInB,MAAO,CAAEF,MAAO,WAApB,mCAIA,cAAC,EAAD,CACEzB,OAAO,aACPE,QA9BY,WAClB4B,IACGE,MAAK,SAAAe,GAAM,OAAIN,EAASM,OA0BvB,4BAOA,cAAC,EAAD,CACE/C,OAAO,oBACPE,QAhCkB,WDCnB4B,IACJE,MAAK,SAAAvB,GAAK,OAAIA,EACZuC,MAAK,SAACC,EAASC,GAAV,OAAmBD,EAAQzB,KAAK2B,cAAcD,EAAK1B,SACxD4B,MAAM,EAAG,MCFTpB,MAAK,SAAAe,GAAM,OAAIN,EAASM,OA4BvB,gCAOA,cAAC,EAAD,CACE/C,OAAO,aACPE,QAlCY,WDGb4B,IACJE,MAAK,SAAAvB,GAAK,OAAIA,EACZ4C,QAAO,SAAA/B,GAAI,MAAmB,QAAfA,EAAKG,YCHpBO,MAAK,SAAAe,GAAM,OAAIN,EAASM,OA8BvB,4BAOA,cAACzC,EAAD,CAAWG,MAAOA,UCzD1B6C,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.801ac5f7.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { Button } from '@mui/material';\n\ninterface Props {\n  dataCy: string,\n  children: React.ReactNode,\n  onClick: () => void\n}\n\nexport const FilterButton: FC<Props> = (props) => {\n  const { dataCy, children, onClick } = props;\n\n  return (\n    <Button\n      variant=\"outlined\"\n      type=\"button\"\n      data-cy={dataCy}\n      onClick={onClick}\n    >\n      {children}\n    </Button>\n  );\n};\n","import React from 'react';\nimport {\n  Paper,\n  List,\n  ListItem,\n  ListItemText,\n} from '@mui/material';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = React.memo(\n  ({ goods }) => (\n    <Paper\n      elevation={5}\n      sx={{ backgroundColor: '#fafafa' }}\n    >\n      <List\n        sx={{\n          width: '100%',\n          position: 'relative',\n          overflow: 'auto',\n          maxHeight: 250,\n          '& ul': { padding: 0 },\n        }}\n        subheader={<li />}\n      >\n        <ul>\n          {goods.map(good => {\n            const { id, name, color } = good;\n\n            return (\n              <ListItem\n                key={id}\n                style={{ color }}\n                data-cy=\"good\"\n              >\n                <ListItemText primary={name} />\n              </ListItem>\n            );\n          })}\n        </ul>\n      </List>\n    </Paper>\n  ),\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject(new Error('Something went wrong'));\n      }\n\n      return response.json();\n    });\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods\n      .sort((current, next) => current.name.localeCompare(next.name))\n      .slice(0, 5));\n};\n\nexport const getRed = () => {\n  return getAll()\n    .then(goods => goods\n      .filter(good => good.color === 'red'));\n};\n","import { FC, useState } from 'react';\nimport './App.scss';\nimport { Box } from '@mui/material';\nimport { FilterButton } from './Button';\nimport { GoodsList } from './GoodsList';\nimport { getAll, get5First, getRed } from './api/goods';\nimport { Good } from './types/Good';\n\nexport const App: FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n\n  const getAllGoods = () => {\n    getAll()\n      .then(result => setGoods(result));\n  };\n\n  const getFirstFiveGoods = () => {\n    get5First()\n      .then(result => setGoods(result));\n  };\n\n  const getRedGoods = () => {\n    getRed()\n      .then(result => setGoods(result));\n  };\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'center',\n        textAlign: 'center',\n      }}\n    >\n      <div className=\"App\">\n        <h1 style={{ color: '#ff5722' }}>\n          Dynamic list of Goods\n        </h1>\n\n        <FilterButton\n          dataCy=\"all-button\"\n          onClick={getAllGoods}\n        >\n          Load all goods\n        </FilterButton>\n\n        <FilterButton\n          dataCy=\"first-five-button\"\n          onClick={getFirstFiveGoods}\n        >\n          Load 5 first goods\n        </FilterButton>\n\n        <FilterButton\n          dataCy=\"red-button\"\n          onClick={getRedGoods}\n        >\n          Load red goods\n        </FilterButton>\n\n        <GoodsList goods={goods} />\n      </div>\n    </Box>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}